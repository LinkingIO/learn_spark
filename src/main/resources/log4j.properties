
# Set everything to be logged to the console
#log4j.rootLogger=INFO, stdout, stderr, log
log4j.rootCategory=ERROR, console
log4j.logger.org.apache.hadoop.hbase=DEBUG
log4j.logger.org.apache.phoenix=DEBUG

log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.target=System.err
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n

# Set the default spark-shell log level to WARN. When running the spark-shell, the
# log level for this class is used to overwrite the root logger's log level, so that
# the user can have different defaults for the shell and regular Spark apps.
log4j.logger.org.apache.spark.repl.Main=WARN

# Settings to quiet third party logs that are too verbose
log4j.logger.org.spark_project.jetty=WARN
log4j.logger.org.spark_project.jetty.util.component.AbstractLifeCycle=ERROR
log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO
log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO
log4j.logger.org.apache.parquet=ERROR
log4j.logger.parquet=ERROR

# SPARK-9183: Settings to avoid annoying messages when looking up nonexistent UDFs in SparkSQL with Hive support
log4j.logger.org.apache.hadoop.hive.metastore.RetryingHMSHandler=FATAL
log4j.logger.org.apache.hadoop.hive.ql.exec.FunctionRegistry=ERROR

## kafka settings
#log4j.logger.org.apache.kafka.clients.Metadata = ERROR
#
#log4j.appender.kafka = org.apache.kafka.log4jappender.KafkaLog4jAppender
#log4j.appender.kafka.topic = spark_log_test
#log4j.appender.kafka.brokerList = azalvedlkafu01.d01saedl.manulife.com:6667,azalvedlkafu02.d01saedl.manulife.com:6667
#log4j.appender.kafka.securityProtocol = SASL_PLAINTEXT
#log4j.appender.kafka.saslKerberosServiceName = kafka
#log4j.appender.kafka.clientJaasConfPath = ./jaas.conf
#log4j.appender.kafka.compressionType = none
#log4j.appender.kafka.Threshold = INFO
#log4j.appender.kafka.requiredNumAcks = -1
#log4j.appender.kafka.syncSend = false
#log4j.appender.kafka.maxBlockMs = 5000
#log4j.appender.kafka.layout=org.apache.log4j.PatternLayout
#log4j.appender.kafka.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n

